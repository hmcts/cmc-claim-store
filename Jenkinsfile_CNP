#!groovy

@Library("Infrastructure")

def product = "cmc"
def component = "claim-store"

List<LinkedHashMap<String, Object>> secrets = [
  secret('AatTestUserUsername', 'SMOKE_TEST_CITIZEN_USERNAME'),
  secret('AatTestUserUsername', 'SMOKE_TEST_SOLICITOR_USERNAME'),
  secret('AatTestUserPassword', 'SMOKE_TEST_USER_PASSWORD'),
  secret('AatTestUserEmailPattern', 'GENERATED_USER_EMAIL_PATTERN'),
  secret('OAUTH2-CLIENT-SECRET', 'OAUTH2_CLIENT_SECRET')
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

String notificationsChannel = '#cmc-tech-notification'

withPipeline("java", product, component) {
  afterCheckout {
    onMaster {
      try {
        sh """
          git fetch origin demo:demo
          git push --force origin HEAD:demo
        """
      } catch (err) {
        notifyBuildEvent channel: notificationsChannel, color: 'warning', message: 'Failed to update demo branch'
      }
    }
  }

  env.CLAIM_STORE_DB_PORT = '5432'
  env.CLAIM_STORE_DB_NAME = 'claimstore'
  env.CLAIM_STORE_DB_USERNAME = 'claimstore'

  loadVaultSecrets(secrets)
  enableSlackNotifications(notificationsChannel)
}
