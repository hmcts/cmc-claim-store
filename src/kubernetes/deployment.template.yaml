---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ${SERVICE_NAME}
  template:
    metadata:
      labels:
        app: ${SERVICE_NAME}
    spec:
      containers:
        - image: ${IMAGE_NAME}
          name: ${SERVICE_NAME}
          env:
            - name: REFORM_TEAM
              value: 'cmc'
            - name: REFORM_SERVICE_NAME
              value: 'claim-store'
            - name: CLAIM_STORE_DB_HOST
              value: 'shared-database'
            - name: CLAIM_STORE_DB_PORT
              value: '5432'
            - name: CLAIM_STORE_DB_USERNAME
              value: 'claimstore'
            - name: CLAIM_STORE_DB_PASSWORD
              value: "claimstore"
            - name: CLAIM_STORE_DB_NAME
              value: 'claimstore'
            - name: CLAIM_STORE_DB_CONNECTION_OPTIONS
              value: ''
            - name: CMC_DB_HOST
              value: 'shared-database'
            - name: CMC_DB_PORT
              value: '5432'
            - name: CMC_DB_NAME
              value: 'cmc'
            - name: CMC_DB_PASSWORD
              value: "cmc"
            - name: CMC_DB_CONNECTION_OPTIONS
              value: ''
            - name: IDAM_S2S_AUTH_TOTP_SECRET
              value: "${CLAIM_STORE_S2S_SECRET}"
            - name: IDAM_CASEWORKER_ANONYMOUS_USERNAME
              value: "${ANONYMOUS_CASEWORKER_USERNAME}"
            - name: IDAM_CASEWORKER_ANONYMOUS_PASSWORD
              value: "${ANONYMOUS_CASEWORKER_PASSWORD}"
            - name: IDAM_CASEWORKER_SYSTEM_USERNAME
              value: "${SYSTEM_UPDATE_USERNAME}"
            - name: IDAM_CASEWORKER_SYSTEM_PASSWORD
              value: "${SYSTEM_UPDATE_PASSWORD}"
            - name: OAUTH2_CLIENT_SECRET
              value: "${OAUTH2_CLIENT_SECRET}"
            - name: GOV_NOTIFY_API_KEY
              value: "${NOTIFY_API_KEY}"
            - name: SPRING_MAIL_HOST
              value: 'mta.reform.hmcts.net'
            - name: SPRING_MAIL_PORT
              value: '25'
            - name: SPRING_MAIL_TEST_CONNECTION
              value: 'false'
            - name: SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE
              value: 'true'
            - name: SPRING_MAIL_PROPERTIES_MAIL_SMTP_SSL_TRUST
              value: 'mta.reform.hmcts.net'
            - name: STAFF_NOTIFICATIONS_SENDER
              value: 'noreply@reform.hmcts.net'
            - name: STAFF_NOTIFICATIONS_RECIPIENT
              value: "${STAFF_EMAIL}"
            - name: RPA_NOTIFICATIONS_SENDER
              value: 'noreply@reform.hmcts.net'
            - name: RPA_NOTIFICATIONS_SEALEDCLAIMRECIPIENT
              value: "${STAFF_EMAIL}"
            - name: RPA_NOTIFICATIONS_MORETIMEREQUESTEDRECIPIENT
              value: "${STAFF_EMAIL}"
            - name: RPA_NOTIFICATIONS_RESPONSERECIPIENT
              value: "${STAFF_EMAIL}"
            - name: RPA_NOTIFICATIONS_COUNTYCOURTJUDGEMENTRECIPIENT
              value: "${STAFF_EMAIL}"
            - name: CLAIM_STORE_TEST_SUPPORT_ENABLED
              value: 'true'
            - name: FEATURE_TOGGLES_EMAILTOSTAFF
              value: 'true'
            - name: ROOT_APPENDER
              value: 'CMC'
            - name: APPINSIGHTS_INSTRUMENTATIONKEY
              value: '${APPINSIGHTS_INSTRUMENTATIONKEY}'
            - name: DOCUMENT_MANAGEMENT_URL
              value: 'false'
            - name: SPRING_MAIL_HOST
              value: 'mta.reform.hmcts.net'
            - name: REFORM_ENVIRONMENT
              value: 'preview'
            - name: CORE_CASE_DATA_API_URL
              value: 'false'
          envFrom:
            - configMapRef:
                name: ${SERVICE_NAME}-config
          resources:
            requests:
              memory: "1024Mi"
              cpu: "500m"
            limits:
              memory: "2048Mi"
              cpu: "2500m"
          ports:
            - containerPort: 4400
              name: http
          imagePullPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  labels:
    app: ${SERVICE_NAME}
spec:
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 4400
  selector:
    app: ${SERVICE_NAME}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ${SERVICE_NAME}
  namespace: ${NAMESPACE}
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: ${SERVICE_FQDN}
    http:
      paths:
      - path: /
        backend:
          serviceName: ${SERVICE_NAME}
          servicePort: 80
---
#
# DATABASE
#
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: shared-database-initdb
  namespace: ${NAMESPACE}
data:
  initdb.sql: |
    CREATE USER claimstore WITH PASSWORD 'claimstore';
    CREATE DATABASE claimstore WITH OWNER = claimstore ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
    CREATE USER cmc WITH PASSWORD 'cmc';
    CREATE DATABASE cmc WITH OWNER = cmc ENCODING = 'UTF-8' CONNECTION LIMIT = -1;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shared-database
  namespace: ${NAMESPACE}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shared-database
  template:
    metadata:
      labels:
        app: shared-database
    spec:
      containers:
      - image: postgres:10.5-alpine
        name: shared-database
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "1024Mi"
            cpu: "1000m"
        imagePullPolicy: Always
        ports:
        - containerPort: 5432
          name: postgres
        volumeMounts:
        - mountPath: /docker-entrypoint-initdb.d
          name: initdb
          readOnly: true
      volumes:
      - name: initdb
        configMap:
          name: shared-database-initdb
---
apiVersion: v1
kind: Service
metadata:
  name: shared-database
  namespace: ${NAMESPACE}
  labels:
    app: shared-database
spec:
  ports:
  - port: 5432
  selector:
    app: shared-database
  clusterIP: None
