#!groovy
@Library("Infrastructure") _

properties([
		parameters([
      choice(name: 'ENVIRONMENT', choices: 'saat\nsprod\nsandbox', description: 'Environment where code should be build and deployed')
		])
])

List<LinkedHashMap<String, Object>> secrets = [
  secret('smoke-test-citizen-username', 'SMOKE_TEST_CITIZEN_USERNAME'),
  secret('smoke-test-solicitor-username', 'SMOKE_TEST_SOLICITOR_USERNAME'),
  secret('smoke-test-user-password', 'SMOKE_TEST_USER_PASSWORD'),
  secret('generated-user-email-pattern', 'GENERATED_USER_EMAIL_PATTERN'),
  secret('citizen-oauth-client-secret', 'OAUTH2_CLIENT_SECRET'),
  secret('claim-store-s2s-secret', 'CLAIM_STORE_S2S_SECRET'),
  secret('anonymous-caseworker-username', 'ANONYMOUS_CASEWORKER_USERNAME'),
  secret('anonymous-caseworker-password', 'ANONYMOUS_CASEWORKER_PASSWORD'),
  secret('system-update-username', 'SYSTEM_UPDATE_USERNAME'),
  secret('system-update-password', 'SYSTEM_UPDATE_PASSWORD'),
  secret('notify-api-key', 'NOTIFY_API_KEY'),
  secret('staff-email', 'STAFF_EMAIL'),
  secret('AppInsightsInstrumentationKey', 'APPINSIGHTS_INSTRUMENTATIONKEY'),
]

static Map<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withParameterizedPipeline('java', 'cmc', 'claim-store', params.ENVIRONMENT, 'sandbox') {
  loadVaultSecrets(secrets)
}
