#!groovy
@Library("Infrastructure@feature/Fetch-vault-secrets") _

properties([
		parameters([
			string(name: 'PRODUCT_NAME', defaultValue: 'cmc', description: ''),
			string(name: 'APP', defaultValue: 'claim-store', description: ''),
			string(name: 'TYPE', defaultValue: 'java', description: ''),
			string(name: 'ENVIRONMENT', defaultValue: 'saat', description: 'Environment where code should be build and deployed'),
			choice(name: 'SUBSCRIPTION', choices: 'sandbox\nnonprod\nprod', description: 'Azure subscriptions available to build in')
		])
])

List<Map<String, Object>> secrets = [
  secret('AatTestUserUsername', 'AAT_TEST_USER_USERNAME'),
  secret('AatTestUserPassword', 'AAT_TEST_USER_PASSWORD'),
  secret('AatTestUserEmailPattern', 'AAT_TEST_USER_EMAIL_PATTERN')
]

static Map<String, Object> secret(String secretName, String envVar) {
  [ $class: 'AzureKeyVaultSecret',
    secretType: 'Secret',
    name: secretName,
    version: '',
    envVariable: envVar
  ]
}

withParameterizedPipeline(params.TYPE, params.PRODUCT_NAME, params.APP, params.ENVIRONMENT, params.SUBSCRIPTION) {
  env.IDAM_API_URL="http://betadevbccidamapplb.reform.hmcts.net"
  enableSlackNotifications('#cmc-tech-cnp')
  loadVaultSecrets(secrets)
}
